{"version":3,"file":"avatar.js","sources":["../../src/components/avatar.gts"],"sourcesContent":["import { template } from \"@ember/template-compiler\";\nimport { hash } from '@ember/helper';\nimport { ReactiveImage } from 'reactiveweb/image';\nimport { WaitUntil } from 'reactiveweb/wait-until';\nimport type { TOC } from '@ember/component/template-only';\nimport type { WithBoundArgs } from '@glint/template';\nconst Fallback: TOC<{\n    Blocks: {\n        default: [];\n    };\n    Args: {\n        /**\n     * The number of milliseconds to wait for the image to load\n     * before displaying the fallback\n     */ delayMs?: number;\n        /**\n     * @private\n     * Bound internally by ember-primitives\n     */ isLoaded: boolean;\n    };\n}> = template(`\n  {{#unless @isLoaded}}\n    {{#let (WaitUntil @delayMs) as |delayFinished|}}\n      {{#if delayFinished}}\n        {{yield}}\n      {{/if}}\n    {{/let}}\n  {{/unless}}\n`, {\n    eval () {\n        return eval(arguments[0]);\n    }\n});\nconst Image: TOC<{\n    Element: HTMLImageElement;\n    Args: {\n        /**\n     * @private\n     * The `src` value for the image.\n     *\n     * Bound internally by ember-primitives\n     */ src: string;\n        /**\n     * @private\n     * Bound internally by ember-primitives\n     */ isLoaded: boolean;\n    };\n}> = template(`\n  {{#if @isLoaded}}\n    <img alt=\"__missing__\" ...attributes src={{@src}} />\n  {{/if}}\n`, {\n    eval () {\n        return eval(arguments[0]);\n    }\n});\nexport const Avatar: TOC<{\n    Element: HTMLSpanElement;\n    Args: {\n        /**\n     * The `src` value for the image.\n     */ src: string;\n    };\n    Blocks: {\n        default: [avatar: {\n                /**\n         * The image to render. It will only render when it has loaded.\n         */ Image: WithBoundArgs<typeof Image, 'src' | 'isLoaded'>;\n                /**\n         * An element that renders when the image hasn't loaded.\n         * This means whilst it's loading, or if there was an error.\n         * If you notice a flash during loading,\n         * you can provide a delayMs prop to delay its rendering so it only renders for those with slower connections.\n         */ Fallback: WithBoundArgs<typeof Fallback, 'isLoaded'>;\n                /**\n         * true while the image is loading\n         */ isLoading: boolean;\n                /**\n         * If the image fails to load, this will be `true`\n         */ isError: boolean;\n            }];\n    };\n}> = template(`\n  {{#let (ReactiveImage @src) as |imgState|}}\n    <span\n      data-prim-avatar\n      ...attributes\n      data-loading={{imgState.isLoading}}\n      data-error={{imgState.isError}}\n    >\n      {{yield\n        (hash\n          Image=(component Image src=@src isLoaded=imgState.isResolved)\n          Fallback=(component Fallback isLoaded=imgState.isResolved)\n          isLoading=imgState.isLoading\n          isError=imgState.isError\n        )\n      }}\n    </span>\n  {{/let}}\n`, {\n    eval () {\n        return eval(arguments[0]);\n    }\n});\nexport default Avatar;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2VtYmVyLXByaW1pdGl2ZXMvZW1iZXItcHJpbWl0aXZlcy9lbWJlci1wcmltaXRpdmVzL3NyYy9jb21wb25lbnRzL2F2YXRhci5ndHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaGFzaCB9IGZyb20gJ0BlbWJlci9oZWxwZXInO1xuXG5pbXBvcnQgeyBSZWFjdGl2ZUltYWdlIH0gZnJvbSAncmVhY3RpdmV3ZWIvaW1hZ2UnO1xuaW1wb3J0IHsgV2FpdFVudGlsIH0gZnJvbSAncmVhY3RpdmV3ZWIvd2FpdC11bnRpbCc7XG5cbmltcG9ydCB0eXBlIHsgVE9DIH0gZnJvbSAnQGVtYmVyL2NvbXBvbmVudC90ZW1wbGF0ZS1vbmx5JztcbmltcG9ydCB0eXBlIHsgV2l0aEJvdW5kQXJncyB9IGZyb20gJ0BnbGludC90ZW1wbGF0ZSc7XG5cbmNvbnN0IEZhbGxiYWNrOiBUT0M8e1xuICBCbG9ja3M6IHsgZGVmYXVsdDogW10gfTtcbiAgQXJnczoge1xuICAgIC8qKlxuICAgICAqIFRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIHRvIHdhaXQgZm9yIHRoZSBpbWFnZSB0byBsb2FkXG4gICAgICogYmVmb3JlIGRpc3BsYXlpbmcgdGhlIGZhbGxiYWNrXG4gICAgICovXG4gICAgZGVsYXlNcz86IG51bWJlcjtcbiAgICAvKipcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEJvdW5kIGludGVybmFsbHkgYnkgZW1iZXItcHJpbWl0aXZlc1xuICAgICAqL1xuICAgIGlzTG9hZGVkOiBib29sZWFuO1xuICB9O1xufT4gPSA8dGVtcGxhdGU-XG4gIHt7I3VubGVzcyBAaXNMb2FkZWR9fVxuICAgIHt7I2xldCAoV2FpdFVudGlsIEBkZWxheU1zKSBhcyB8ZGVsYXlGaW5pc2hlZHx9fVxuICAgICAge3sjaWYgZGVsYXlGaW5pc2hlZH19XG4gICAgICAgIHt7eWllbGR9fVxuICAgICAge3svaWZ9fVxuICAgIHt7L2xldH19XG4gIHt7L3VubGVzc319XG48L3RlbXBsYXRlPjtcblxuY29uc3QgSW1hZ2U6IFRPQzx7XG4gIEVsZW1lbnQ6IEhUTUxJbWFnZUVsZW1lbnQ7XG4gIEFyZ3M6IHtcbiAgICAvKipcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIFRoZSBgc3JjYCB2YWx1ZSBmb3IgdGhlIGltYWdlLlxuICAgICAqXG4gICAgICogQm91bmQgaW50ZXJuYWxseSBieSBlbWJlci1wcmltaXRpdmVzXG4gICAgICovXG4gICAgc3JjOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBCb3VuZCBpbnRlcm5hbGx5IGJ5IGVtYmVyLXByaW1pdGl2ZXNcbiAgICAgKi9cbiAgICBpc0xvYWRlZDogYm9vbGVhbjtcbiAgfTtcbn0-ID0gPHRlbXBsYXRlPlxuICB7eyNpZiBAaXNMb2FkZWR9fVxuICAgIDxpbWcgYWx0PVwiX19taXNzaW5nX19cIiAuLi5hdHRyaWJ1dGVzIHNyYz17e0BzcmN9fSAvPlxuICB7ey9pZn19XG48L3RlbXBsYXRlPjtcblxuZXhwb3J0IGNvbnN0IEF2YXRhcjogVE9DPHtcbiAgRWxlbWVudDogSFRNTFNwYW5FbGVtZW50O1xuICBBcmdzOiB7XG4gICAgLyoqXG4gICAgICogVGhlIGBzcmNgIHZhbHVlIGZvciB0aGUgaW1hZ2UuXG4gICAgICovXG4gICAgc3JjOiBzdHJpbmc7XG4gIH07XG4gIEJsb2Nrczoge1xuICAgIGRlZmF1bHQ6IFtcbiAgICAgIGF2YXRhcjoge1xuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIGltYWdlIHRvIHJlbmRlci4gSXQgd2lsbCBvbmx5IHJlbmRlciB3aGVuIGl0IGhhcyBsb2FkZWQuXG4gICAgICAgICAqL1xuICAgICAgICBJbWFnZTogV2l0aEJvdW5kQXJnczx0eXBlb2YgSW1hZ2UsICdzcmMnIHwgJ2lzTG9hZGVkJz47XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBBbiBlbGVtZW50IHRoYXQgcmVuZGVycyB3aGVuIHRoZSBpbWFnZSBoYXNuJ3QgbG9hZGVkLlxuICAgICAgICAgKiBUaGlzIG1lYW5zIHdoaWxzdCBpdCdzIGxvYWRpbmcsIG9yIGlmIHRoZXJlIHdhcyBhbiBlcnJvci5cbiAgICAgICAgICogSWYgeW91IG5vdGljZSBhIGZsYXNoIGR1cmluZyBsb2FkaW5nLFxuICAgICAgICAgKiB5b3UgY2FuIHByb3ZpZGUgYSBkZWxheU1zIHByb3AgdG8gZGVsYXkgaXRzIHJlbmRlcmluZyBzbyBpdCBvbmx5IHJlbmRlcnMgZm9yIHRob3NlIHdpdGggc2xvd2VyIGNvbm5lY3Rpb25zLlxuICAgICAgICAgKi9cbiAgICAgICAgRmFsbGJhY2s6IFdpdGhCb3VuZEFyZ3M8dHlwZW9mIEZhbGxiYWNrLCAnaXNMb2FkZWQnPjtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIHRydWUgd2hpbGUgdGhlIGltYWdlIGlzIGxvYWRpbmdcbiAgICAgICAgICovXG4gICAgICAgIGlzTG9hZGluZzogYm9vbGVhbjtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIElmIHRoZSBpbWFnZSBmYWlscyB0byBsb2FkLCB0aGlzIHdpbGwgYmUgYHRydWVgXG4gICAgICAgICAqL1xuICAgICAgICBpc0Vycm9yOiBib29sZWFuO1xuICAgICAgfSxcbiAgICBdO1xuICB9O1xufT4gPSA8dGVtcGxhdGU-XG4gIHt7I2xldCAoUmVhY3RpdmVJbWFnZSBAc3JjKSBhcyB8aW1nU3RhdGV8fX1cbiAgICA8c3BhblxuICAgICAgZGF0YS1wcmltLWF2YXRhclxuICAgICAgLi4uYXR0cmlidXRlc1xuICAgICAgZGF0YS1sb2FkaW5nPXt7aW1nU3RhdGUuaXNMb2FkaW5nfX1cbiAgICAgIGRhdGEtZXJyb3I9e3tpbWdTdGF0ZS5pc0Vycm9yfX1cbiAgICA-XG4gICAgICB7e3lpZWxkXG4gICAgICAgIChoYXNoXG4gICAgICAgICAgSW1hZ2U9KGNvbXBvbmVudCBJbWFnZSBzcmM9QHNyYyBpc0xvYWRlZD1pbWdTdGF0ZS5pc1Jlc29sdmVkKVxuICAgICAgICAgIEZhbGxiYWNrPShjb21wb25lbnQgRmFsbGJhY2sgaXNMb2FkZWQ9aW1nU3RhdGUuaXNSZXNvbHZlZClcbiAgICAgICAgICBpc0xvYWRpbmc9aW1nU3RhdGUuaXNMb2FkaW5nXG4gICAgICAgICAgaXNFcnJvcj1pbWdTdGF0ZS5pc0Vycm9yXG4gICAgICAgIClcbiAgICAgIH19XG4gICAgPC9zcGFuPlxuICB7ey9sZXR9fVxuPC90ZW1wbGF0ZT47XG5cbmV4cG9ydCBkZWZhdWx0IEF2YXRhcjtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsU0FBUyxJQUFJLFFBQVEsZ0JBQWdCO0FBRXJDLFNBQVMsYUFBYSxRQUFRLG9CQUFvQjtBQUNsRCxTQUFTLFNBQVMsUUFBUSx5QkFBeUI7QUFFbkQsY0FBYyxHQUFHLFFBQVEsaUNBQWlDO0FBQzFELGNBQWMsYUFBYSxRQUFRLGtCQUFrQjtBQUVyRCxNQUFNLFVBQVU7SUFDZDtRQUFVOztJQUNWO1FBQ0U7OztLQUdDLEdBQ0QsVUFBVSxNQUFNO1FBQ2hCOzs7S0FHQyxHQUNELFVBQVUsT0FBTzs7S0FFaEIsU0FBVSxDQUFBOzs7Ozs7OztBQVFmLENBQUEsRUFBQTtJQUFBO1FBQUEsT0FBQSxLQUFBLFNBQUEsQ0FBQSxFQUFXO0lBQUQ7QUFBQTtBQUVWLE1BQU0sT0FBTztJQUNYLFNBQVM7SUFDVDtRQUNFOzs7OztLQUtDLEdBQ0QsS0FBSyxNQUFNO1FBQ1g7OztLQUdDLEdBQ0QsVUFBVSxPQUFPOztLQUVoQixTQUFVLENBQUE7Ozs7QUFJZixDQUFBLEVBQUE7SUFBQTtRQUFBLE9BQUEsS0FBQSxTQUFBLENBQUEsRUFBVztJQUFEO0FBQUE7QUFFVixPQUFPLE1BQU0sUUFBUTtJQUNuQixTQUFTO0lBQ1Q7UUFDRTs7S0FFQyxHQUNELEtBQUssTUFBTTs7SUFFYjtRQUNFLFVBQ0U7Z0JBQ0U7O1NBRUMsR0FDRCxPQUFPLHFCQUFxQixPQUFPLFFBQVE7Z0JBQzNDOzs7OztTQUtDLEdBQ0QsVUFBVSxxQkFBcUIsVUFBVTtnQkFDekM7O1NBRUMsR0FDRCxXQUFXLE9BQU87Z0JBQ2xCOztTQUVDLEdBQ0QsU0FBUyxPQUFPOzs7S0FJbkIsU0FBVSxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQmYsQ0FBQSxFQUFBO0lBQUE7UUFBQSxPQUFBLEtBQUEsU0FBQSxDQUFBLEVBQVc7SUFBRDtBQUFBLEdBQUU7QUFFWixlQUFlLE9BQU8ifQ"],"names":["Fallback","precompileTemplate","scope","WaitUntil","strictMode","templateOnly","Image","Avatar","ReactiveImage","hash"],"mappings":";;;;;;;AAQA,MAAMA,WAcDC,oBAAAA,CAAAA,kBAAA,CAQL,+KAAA,EAAA;AAAAC,EAAAA,KAAA,EAAAA,OAAA;AAAAC,IAAAA,SAAAA;AAAA,GAAA,CAAA;EAAAC,UAAA,EAAA,IAAA;AAAU,CAAA,CAAA,EAAAC,YAAA,EAAA,CAAA,CAAA;AAEV,MAAMC,QAgBDL,oBAAAA,CAAAA,kBAAA,CAIL,gGAAA,EAAA;EAAAG,UAAA,EAAA,IAAA;AAAU,CAAA,CAAA,EAAAC,YAAA,EAAA,CAAA,CAAA;AAEGE,MAAAA,SAiCRN,oBAAAA,CAAAA,kBAAA,CAkBL,kYAAA,EAAA;AAAAC,EAAAA,KAAA,EAAAA,OAAA;IAAAM,aAAA;IAAAC,IAAA;IAAAH,KAAA;AAAAN,IAAAA,QAAAA;AAAA,GAAA,CAAA;EAAAI,UAAA,EAAA,IAAA;AAAU,CAAA,CAAA,EAAAC,YAAA,EAAA;;;;"}