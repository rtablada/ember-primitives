{"version":3,"file":"popover.js","sources":["../../src/components/popover.gts"],"sourcesContent":["import { template } from \"@ember/template-compiler\";\nimport { hash } from '@ember/helper';\nimport { arrow } from '@floating-ui/dom';\nimport { element } from 'ember-element-helper';\nimport { modifier as eModifier } from 'ember-modifier';\nimport { cell } from 'ember-resources';\nimport { FloatingUI } from '../floating-ui.ts';\nimport { Portal } from './portal.gts';\nimport { TARGETS } from './portal-targets.gts';\nimport type { Signature as FloatingUiComponentSignature } from '../floating-ui/component.ts';\nimport type { Signature as HookSignature } from '../floating-ui/modifier.ts';\nimport type { TOC } from '@ember/component/template-only';\nimport type { ElementContext, Middleware } from '@floating-ui/dom';\nimport type { ModifierLike, WithBoundArgs } from '@glint/template';\nexport interface Signature {\n    Args: {\n        /**\n     * See the Floating UI's [flip docs](https://floating-ui.com/docs/flip) for possible values.\n     *\n     * This argument is forwarded to `ember-velcro`'s `<Velcro>` component.\n     */ flipOptions?: HookSignature['Args']['Named']['flipOptions'];\n        /**\n     * Array of one or more objects to add to Floating UI's list of [middleware](https://floating-ui.com/docs/middleware)\n     *\n     * This argument is forwarded to `ember-velcro`'s `<Velcro>` component.\n     */ middleware?: HookSignature['Args']['Named']['middleware'];\n        /**\n     * See the Floating UI's [offset docs](https://floating-ui.com/docs/offset) for possible values.\n     *\n     * This argument is forwarded to `ember-velcro`'s `<Velcro>` component.\n     */ offsetOptions?: HookSignature['Args']['Named']['offsetOptions'];\n        /**\n     * One of the possible [`placements`](https://floating-ui.com/docs/computeposition#placement). The default is 'bottom'.\n     *\n     * Possible values are\n     * - top\n     * - bottom\n     * - right\n     * - left\n     *\n     * And may optionally have `-start` or `-end` added to adjust position along the side.\n     *\n     * This argument is forwarded to `ember-velcro`'s `<Velcro>` component.\n     */ placement?: `${'top' | 'bottom' | 'left' | 'right'}${'' | '-start' | '-end'}`;\n        /**\n     * See the Floating UI's [shift docs](https://floating-ui.com/docs/shift) for possible values.\n     *\n     * This argument is forwarded to `ember-velcro`'s `<Velcro>` component.\n     */ shiftOptions?: HookSignature['Args']['Named']['shiftOptions'];\n        /**\n     * CSS position property, either `fixed` or `absolute`.\n     *\n     * Pros and cons of each strategy are explained on [Floating UI's Docs](https://floating-ui.com/docs/computePosition#strategy)\n     *\n     * This argument is forwarded to `ember-velcro`'s `<Velcro>` component.\n     */ strategy?: HookSignature['Args']['Named']['strategy'];\n        /**\n     * By default, the popover is portaled.\n     * If you don't control your CSS, and the positioning of the popover content\n     * is misbehaving, you may pass \"@inline={{true}}\" to opt out of portalling.\n     *\n     * Inline may also be useful in nested menus, where you know exactly how the nesting occurs\n     */ inline?: boolean;\n    };\n    Blocks: {\n        default: [{\n                hook: FloatingUiComponentSignature['Blocks']['default'][0]['hook'];\n                setHook: FloatingUiComponentSignature['Blocks']['default'][0]['setHook'];\n                Content: WithBoundArgs<typeof Content, 'loop'>;\n                data: FloatingUiComponentSignature['Blocks']['default'][0]['data'];\n                arrow: WithBoundArgs<ModifierLike<AttachArrowSignature>, 'arrowElement' | 'data'>;\n            }];\n    };\n}\nfunction getElementTag(tagName1: undefined | string) {\n    return tagName1 || 'div';\n}\n/**\n * Allows lazy evaluation of the portal target (do nothing until rendered)\n * This is useful because the algorithm for finding the portal target isn't cheap.\n */ const Content: TOC<{\n    Element: HTMLDivElement;\n    Args: {\n        loop: ModifierLike<{\n            Element: HTMLElement;\n        }>;\n        inline?: boolean;\n        /**\n     * By default the popover content is wrapped in a div.\n     * You may change this by supplying the name of an element here.\n     *\n     * For example:\n     * ```gjs\n     * <Popover as |p|>\n     *  <p.Content @as=\"dialog\">\n     *    this is now focus trapped\n     *  </p.Content>\n     * </Popover>\n     * ```\n     */ as?: string;\n    };\n    Blocks: {\n        default: [];\n    };\n}> = template(`\n  {{#let (element (getElementTag @as)) as |El|}}\n    {{#if @inline}}\n      {{! @glint-ignore\n            https://github.com/tildeio/ember-element-helper/issues/91\n            https://github.com/typed-ember/glint/issues/610\n      }}\n      <El {{@loop}} ...attributes>\n        {{yield}}\n      </El>\n    {{else}}\n      <Portal @to={{TARGETS.popover}}>\n        {{! @glint-ignore\n              https://github.com/tildeio/ember-element-helper/issues/91\n              https://github.com/typed-ember/glint/issues/610\n        }}\n        <El {{@loop}} ...attributes>\n          {{yield}}\n        </El>\n      </Portal>\n    {{/if}}\n  {{/let}}\n`, {\n    eval () {\n        return eval(arguments[0]);\n    }\n});\ninterface AttachArrowSignature {\n    Element: HTMLElement;\n    Args: {\n        Named: {\n            arrowElement: ReturnType<typeof ArrowElement>;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            data?: any;\n        };\n    };\n}\nconst arrowSides = {\n    top: 'bottom',\n    right: 'left',\n    bottom: 'top',\n    left: 'right'\n};\ntype Direction = 'top' | 'bottom' | 'left' | 'right';\ntype Placement = `${Direction}${'' | '-start' | '-end'}`;\nconst attachArrow = eModifier<AttachArrowSignature>((element1, _1: [], named1)=>{\n    if (element1 === named1.arrowElement.current) {\n        if (!named1.data) return;\n        if (!named1.data.middlewareData) return;\n        let { arrow: arrow1 } = named1.data.middlewareData;\n        let { placement: placement1 } = named1.data;\n        if (!arrow1) return;\n        if (!placement1) return;\n        let { x: arrowX1, y: arrowY1 } = arrow1;\n        let otherSide1 = (placement1 as Placement).split('-')[0] as Direction;\n        let staticSide1 = arrowSides[otherSide1];\n        Object.assign(named1.arrowElement.current.style, {\n            left: arrowX1 != null ? `${arrowX1}px` : '',\n            top: arrowY1 != null ? `${arrowY1}px` : '',\n            right: '',\n            bottom: '',\n            [staticSide1]: '-4px'\n        });\n        return;\n    }\n    (async ()=>{\n        await Promise.resolve();\n        named1.arrowElement.set(element1);\n    })();\n});\nconst ArrowElement: () => ReturnType<typeof cell> = ()=>cell<HTMLElement>();\nfunction maybeAddArrow(middleware1: Middleware[] | undefined, element1: Element | undefined) {\n    let result1 = [\n        ...(middleware1 || [])\n    ];\n    if (element1) {\n        result1.push(arrow({\n            element: element1\n        }));\n    }\n    return result1;\n}\nfunction flipOptions(options1: HookSignature['Args']['Named']['flipOptions']) {\n    return {\n        elementContext: 'reference' as ElementContext,\n        ...options1\n    };\n}\nexport const Popover: TOC<Signature> = template(`\n  {{#let (ArrowElement) as |arrowElement|}}\n    <FloatingUI\n      @placement={{@placement}}\n      @strategy={{@strategy}}\n      @middleware={{maybeAddArrow @middleware arrowElement.current}}\n      @flipOptions={{flipOptions @flipOptions}}\n      @shiftOptions={{@shiftOptions}}\n      @offsetOptions={{@offsetOptions}}\n      as |fui|\n    >\n      {{yield\n        (hash\n          hook=fui.hook\n          setHook=fui.setHook\n          Content=(component Content loop=fui.loop inline=@inline)\n          data=fui.data\n          arrow=(modifier attachArrow arrowElement=arrowElement data=fui.data)\n        )\n      }}\n    </FloatingUI>\n  {{/let}}\n`, {\n    eval () {\n        return eval(arguments[0]);\n    }\n});\nexport default Popover;\n//# sourceMappingURL=data:application/json;base64,"],"names":["getElementTag","tagName1","Content","precompileTemplate","scope","element","Portal","TARGETS","strictMode","templateOnly","arrowSides","top","right","bottom","left","attachArrow","eModifier","element1","_1","named1","arrowElement","current","data","middlewareData","arrow","arrow1","placement","placement1","x","arrowX1","y","arrowY1","otherSide1","split","staticSide1","Object","assign","style","Promise","resolve","set","ArrowElement","cell","maybeAddArrow","middleware1","result1","push","flipOptions","options1","elementContext","Popover","setComponentTemplate","FloatingUI","hash"],"mappings":";;;;;;;;;;;;;;AAwFA,SAASA,cAAcC,QAA2B,EAAA;AAChD,EAAA,OAAOA,QAAA,IAAW,KAAA,CAAA;AACpB,CAAA;AAEA;;;;AAIA,MAAMC,UAqBDC,oBAAAA,CAAAA,kBAAA,CAsBL,upBAAA,EAAA;AAAAC,EAAAA,KAAA,EAAAA,OAAA;IAAAC,OAAA;IAAAL,aAAA;IAAAM,MAAA;AAAAC,IAAAA,OAAAA;AAAA,GAAA,CAAA;EAAAC,UAAA,EAAA,IAAA;AAAU,CAAA,CAAA,EAAAC,YAAA,EAAA,CAAA,CAAA;AAaV,MAAMC,UAAA,GAAa;AACjBC,EAAAA,GAAA,EAAK,QAAA;AACLC,EAAAA,KAAA,EAAO,MAAA;AACPC,EAAAA,MAAA,EAAQ,KAAA;AACRC,EAAAA,IAAA,EAAM,OAAA;AACR,CAAA,CAAA;AAKA,MAAMC,WAAA,GAAcC,QAAA,CAAgC,CAACC,QAAA,EAASC,EAAA,EAAOC,MAAA,KAAA;AACnE,EAAA,IAAIF,QAAA,KAAYE,MAAA,CAAMC,YAAY,CAACC,OAAO,EAAE;AAC1C,IAAA,IAAI,CAACF,MAAA,CAAMG,IAAI,EAAE,OAAA;AACjB,IAAA,IAAI,CAACH,MAAA,CAAMG,IAAI,CAACC,cAAc,EAAE,OAAA;IAEhC,IAAI;AAAEC,MAAAA,KAAA,EAAAC,MAAAA;AAAK,KAAE,GAAGN,MAAA,CAAMG,IAAI,CAACC,cAAc,CAAA;IACzC,IAAI;AAAEG,MAAAA,SAAA,EAAAC,UAAAA;KAAW,GAAGR,MAAA,CAAMG,IAAI,CAAA;IAE9B,IAAI,CAACG,MAAA,EAAO,OAAA;IACZ,IAAI,CAACE,UAAA,EAAW,OAAA;IAEhB,IAAI;AAAEC,MAAAA,CAAA,EAAGC,OAAM;AAAEC,MAAAA,CAAA,EAAGC,OAAAA;AAAM,KAAE,GAAGN,MAAA,CAAA;IAC/B,IAAIO,UAAA,GAAaL,UAAA,CAAwBM,KAAK,CAAC,GAAA,CAAI,CAAC,CAAM,CAAA,CAAA;AAC1D,IAAA,IAAIC,WAAA,GAAaxB,UAAU,CAACsB,UAAA,CAAU,CAAA;IAEtCG,MAAA,CAAOC,MAAM,CAACjB,MAAA,CAAMC,YAAY,CAACC,OAAO,CAACgB,KAAK,EAAE;AAC9CvB,MAAAA,IAAA,EAAMe,OAAA,IAAU,OAAQ,CAAEA,EAAAA,OAAO,IAAG,GAAG,EAAA;AACvClB,MAAAA,GAAA,EAAKoB,OAAA,IAAU,OAAQ,CAAEA,EAAAA,OAAO,IAAG,GAAG,EAAA;AACtCnB,MAAAA,KAAA,EAAO,EAAA;AACPC,MAAAA,MAAA,EAAQ,EAAA;AACR,MAAA,CAACqB,WAAA,GAAa,MAAA;AAChB,KAAA,CAAA,CAAA;AAEA,IAAA,OAAA;AACF,GAAA;EAEA,CAAC,YAAA;IACC,MAAMI,OAAA,CAAQC,OAAO,EAAA,CAAA;AACrBpB,IAAAA,MAAA,CAAMC,YAAY,CAACoB,GAAG,CAACvB,QAAA,CAAA,CAAA;GACxB,GAAA,CAAA;AACH,CAAA,CAAA,CAAA;AAEA,MAAMwB,YAAsC,GAAqBA,MAAMC,IAAA,EAAK,CAAA;AAE5E,SAASC,aAAAA,CAAcC,WAAoC,EAAE3B,QAA4B,EAAA;AACvF,EAAA,IAAI4B,OAAA,GAAS,KAAKD,WAAA,IAAc,EAAE,EAAE,CAAA;AAEpC,EAAA,IAAI3B,QAAA,EAAS;AACX4B,IAAAA,OAAA,CAAOC,IAAI,CAACtB,KAAA,CAAM;AAAEnB,MAAAA,OAAA,EAAAY,QAAAA;AAAQ,KAAA,CAAA,CAAA,CAAA;AAC9B,GAAA;AAEA,EAAA,OAAO4B,OAAA,CAAA;AACT,CAAA;AAEA,SAASE,YAAYC,QAAsD,EAAA;EACzE,OAAO;AACLC,IAAAA,cAAA,EAAgB,WAAe;IAC/B,GAAGD,QAAAA;AACL,GAAA,CAAA;AACF,CAAA;MAEaE,OAAa,GAAAC,oBAAA,CAAahD,kBAAA,CAsBvC,8gBAAA,EAAA;AAAAC,EAAAA,KAAA,EAAAA,OAAA;IAAAqC,YAAA;gBAAAW,MAAA;IAAAT,aAAA;IAAAI,WAAA;IAAAM,IAAA;IAAAnD,OAAA;AAAAa,IAAAA,WAAAA;AAAA,GAAA,CAAA;EAAAP,UAAA,EAAA,IAAA;AAAU,CAAA,CAAA,EAAAC,YAAA,EAAA;;;;"}