{"version":3,"file":"menu.js","sources":["../../src/components/menu.gts"],"sourcesContent":["import { template } from \"@ember/template-compiler\";\nimport Component from '@glimmer/component';\nimport { hash } from '@ember/helper';\nimport { on } from '@ember/modifier';\nimport { guidFor } from '@ember/object/internals';\nimport { modifier as eModifier } from 'ember-modifier';\nimport { cell } from 'ember-resources';\nimport { getTabster, getTabsterAttribute, setTabsterAttribute, Types } from 'tabster';\nimport { Popover, type Signature as PopoverSignature } from './popover.gts';\nimport type { TOC } from '@ember/component/template-only';\nimport type { WithBoundArgs } from '@glint/template';\ntype Cell<V> = ReturnType<typeof cell>;\ntype PopoverArgs = PopoverSignature['Args'];\ntype PopoverBlockParams = PopoverSignature['Blocks']['default'][0];\nconst TABSTER_CONFIG_CONTENT = getTabsterAttribute({\n    mover: {\n        direction: Types.MoverDirections.Both,\n        cyclic: true\n    },\n    deloser: {}\n}, true);\nconst TABSTER_CONFIG_TRIGGER = {\n    deloser: {}\n};\nexport interface Signature {\n    Args: PopoverArgs;\n    Blocks: {\n        default: [{\n                arrow: PopoverBlockParams['arrow'];\n                trigger: WithBoundArgs<typeof trigger, 'triggerElement' | 'contentId' | 'isOpen' | 'setHook'>;\n                Trigger: WithBoundArgs<typeof Trigger, 'triggerModifier'>;\n                Content: WithBoundArgs<typeof Content, 'triggerElement' | 'contentId' | 'isOpen' | 'PopoverContent'>;\n                isOpen: boolean;\n            }];\n    };\n}\nexport interface SeparatorSignature {\n    Element: HTMLDivElement;\n    Args: {\n    };\n    Blocks: {\n        default: [];\n    };\n}\nconst Separator: TOC<SeparatorSignature> = template(`\n  <div role=\"separator\" ...attributes>\n    {{yield}}\n  </div>\n`, {\n    eval () {\n        return eval(arguments[0]);\n    }\n});\n/**\n * We focus items on `pointerMove` to achieve the following:\n *\n * - Mouse over an item (it focuses)\n * - Leave mouse where it is and use keyboard to focus a different item\n * - Wiggle mouse without it leaving previously focused item\n * - Previously focused item should re-focus\n *\n * If we used `mouseOver`/`mouseEnter` it would not re-focus when the mouse\n * wiggles. This is to match native menu implementation.\n */ function focusOnHover(e1: PointerEvent) {\n    const item1 = e1.currentTarget;\n    if (item1 instanceof HTMLElement) {\n        item1?.focus();\n    }\n}\nexport interface ItemSignature {\n    Element: HTMLButtonElement;\n    Args: {\n        onSelect?: (event: Event) => void;\n    };\n    Blocks: {\n        default: [];\n    };\n}\nconst Item: TOC<ItemSignature> = template(`\n  <button\n    type=\"button\"\n    role=\"menuitem\"\n    {{! @glint-ignore !}}\n    {{(if @onSelect (modifier on \"click\" @onSelect))}}\n    {{on \"pointermove\" focusOnHover}}\n    ...attributes\n  >\n    {{yield}}\n  </button>\n`, {\n    eval () {\n        return eval(arguments[0]);\n    }\n});\nconst installContent = eModifier<{\n    Element: HTMLElement;\n    Args: {\n        Named: {\n            isOpen: Cell<boolean>;\n            triggerElement: Cell<HTMLElement>;\n        };\n    };\n}>((element1, _1: [], { isOpen: isOpen1, triggerElement: triggerElement1 })=>{\n    // focus first focusable element on the content\n    const tabster1 = getTabster(window);\n    const firstFocusable1 = tabster1?.focusable.findFirst({\n        container: element1\n    });\n    firstFocusable1?.focus();\n    // listen for \"outside\" clicks\n    function onDocumentClick1(e1: MouseEvent) {\n        if (isOpen1.current && e1.target && !element1.contains(e1.target as HTMLElement) && !triggerElement1.current?.contains(e1.target as HTMLElement)) {\n            isOpen1.current = false;\n        }\n    }\n    // listen for the escape key\n    function onDocumentKeydown1(e1: KeyboardEvent) {\n        if (isOpen1.current && e1.key === 'Escape') {\n            isOpen1.current = false;\n        }\n    }\n    document.addEventListener('click', onDocumentClick1);\n    document.addEventListener('keydown', onDocumentKeydown1);\n    return ()=>{\n        document.removeEventListener('click', onDocumentClick1);\n        document.removeEventListener('keydown', onDocumentKeydown1);\n    };\n});\ninterface PrivateContentSignature {\n    Element: HTMLDivElement;\n    Args: {\n        triggerElement: Cell<HTMLElement>;\n        contentId: string;\n        isOpen: Cell<boolean>;\n        PopoverContent: PopoverBlockParams['Content'];\n    };\n    Blocks: {\n        default: [{\n                Item: typeof Item;\n                Separator: typeof Separator;\n            }];\n    };\n}\nexport interface ContentSignature {\n    Element: PrivateContentSignature['Element'];\n    Args: {\n    };\n    Blocks: PrivateContentSignature['Blocks'];\n}\nconst Content: TOC<PrivateContentSignature> = template(`\n  {{#if @isOpen.current}}\n    <@PopoverContent\n      id={{@contentId}}\n      role=\"menu\"\n      data-tabster={{TABSTER_CONFIG_CONTENT}}\n      tabindex=\"0\"\n      {{installContent isOpen=@isOpen triggerElement=@triggerElement}}\n      {{on \"click\" @isOpen.toggle}}\n      ...attributes\n    >\n      {{yield (hash Item=Item Separator=Separator)}}\n    </@PopoverContent>\n  {{/if}}\n`, {\n    eval () {\n        return eval(arguments[0]);\n    }\n});\ninterface PrivateTriggerModifierSignature {\n    Element: HTMLElement;\n    Args: {\n        Named: {\n            triggerElement: Cell<HTMLElement>;\n            isOpen: Cell<boolean>;\n            contentId: string;\n            setHook: PopoverBlockParams['setHook'];\n        };\n    };\n}\nexport interface TriggerModifierSignature {\n    Element: PrivateTriggerModifierSignature['Element'];\n}\nconst trigger = eModifier<PrivateTriggerModifierSignature>((element1, _1: [], { triggerElement: triggerElement1, isOpen: isOpen1, contentId: contentId1, setHook: setHook1 })=>{\n    element1.setAttribute('aria-haspopup', 'menu');\n    if (isOpen1.current) {\n        element1.setAttribute('aria-controls', contentId1);\n        element1.setAttribute('aria-expanded', 'true');\n    } else {\n        element1.removeAttribute('aria-controls');\n        element1.setAttribute('aria-expanded', 'false');\n    }\n    setTabsterAttribute(element1, TABSTER_CONFIG_TRIGGER);\n    const onTriggerClick1 = ()=>isOpen1.toggle();\n    element1.addEventListener('click', onTriggerClick1);\n    triggerElement1.current = element1;\n    setHook1(element1);\n    return ()=>{\n        element1.removeEventListener('click', onTriggerClick1);\n    };\n});\ninterface PrivateTriggerSignature {\n    Element: HTMLButtonElement;\n    Args: {\n        triggerModifier: WithBoundArgs<typeof trigger, 'triggerElement' | 'contentId' | 'isOpen' | 'setHook'>;\n    };\n    Blocks: {\n        default: [];\n    };\n}\nexport interface TriggerSignature {\n    Element: PrivateTriggerSignature['Element'];\n    Args: {\n    };\n    Blocks: PrivateTriggerSignature['Blocks'];\n}\nconst Trigger: TOC<PrivateTriggerSignature> = template(`\n  <button type=\"button\" {{@triggerModifier}} ...attributes>\n    {{yield}}\n  </button>\n`, {\n    eval () {\n        return eval(arguments[0]);\n    }\n});\nconst IsOpen = ()=>cell<boolean>(false);\nconst TriggerElement = ()=>cell<HTMLElement>();\nexport class Menu extends Component<Signature> {\n    contentId = guidFor(this);\n    static{\n        template(`\n    {{#let (IsOpen) (TriggerElement) as |isOpen triggerEl|}}\n      <Popover\n        @flipOptions={{@flipOptions}}\n        @middleware={{@middleware}}\n        @offsetOptions={{@offsetOptions}}\n        @placement={{@placement}}\n        @shiftOptions={{@shiftOptions}}\n        @strategy={{@strategy}}\n        @inline={{@inline}}\n        as |p|\n      >\n        {{#let\n          (modifier\n            trigger\n            triggerElement=triggerEl\n            isOpen=isOpen\n            contentId=this.contentId\n            setHook=p.setHook\n          )\n          as |triggerModifier|\n        }}\n          {{yield\n            (hash\n              trigger=triggerModifier\n              Trigger=(component Trigger triggerModifier=triggerModifier)\n              Content=(component\n                Content\n                PopoverContent=p.Content\n                isOpen=isOpen\n                triggerElement=triggerEl\n                contentId=this.contentId\n              )\n              arrow=p.arrow\n              isOpen=isOpen.current\n            )\n          }}\n        {{/let}}\n      </Popover>\n    {{/let}}\n  `, {\n            component: this,\n            eval () {\n                return eval(arguments[0]);\n            }\n        });\n    }\n}\nexport default Menu;\n//# sourceMappingURL=data:application/json;base64,"],"names":["TABSTER_CONFIG_CONTENT","getTabsterAttribute","mover","direction","Types","MoverDirections","Both","cyclic","deloser","TABSTER_CONFIG_TRIGGER","Separator","setComponentTemplate","precompileTemplate","strictMode","templateOnly","focusOnHover","e1","item1","currentTarget","HTMLElement","focus","Item","scope","on","installContent","eModifier","element1","_1","isOpen","isOpen1","triggerElement","triggerElement1","tabster1","getTabster","window","firstFocusable1","focusable","findFirst","container","onDocumentClick1","current","target","contains","onDocumentKeydown1","key","document","addEventListener","removeEventListener","Content","hash","trigger","contentId","contentId1","setHook","setHook1","setAttribute","removeAttribute","setTabsterAttribute","onTriggerClick1","toggle","Trigger","IsOpen","cell","TriggerElement","Menu","Component","guidFor","Popover"],"mappings":"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"}