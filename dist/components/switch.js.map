{"version":3,"file":"switch.js","sources":["../../src/components/switch.gts"],"sourcesContent":["import { template } from \"@ember/template-compiler\";\nimport { fn, hash } from '@ember/helper';\nimport { on } from '@ember/modifier';\nimport { cell } from 'ember-resources';\nimport { uniqueId } from '../utils.ts';\nimport { Label } from './-private/typed-elements.gts';\nimport { toggleWithFallback } from './-private/utils.ts';\nimport type { TOC } from '@ember/component/template-only';\nimport type { WithBoundArgs } from '@glint/template';\nexport interface Signature {\n    Element: HTMLInputElement;\n    Args: {\n        /**\n     * The initial checked value of the Switch.\n     * This value is reactive, so if the value that\n     * `@checked` is set to updates, the state of the Switch will also update.\n     */ checked?: boolean;\n        /**\n     * Callback when the Switch state is toggled\n     */ onChange?: (checked: boolean, event: Event) => void;\n    };\n    Blocks: {\n        default?: [{\n                /**\n         * The Switch Element.\n         * It has a pre-wired `id` so that the relevant Label is\n         * appropriately associated via the `for` property of the Label.\n         *\n         * ```gjs\n         * import { Switch } from 'ember-primitives';\n         *\n         * <template>\n         *   <Switch as |s|>\n         *     <s.Control />\n         *   </Switch>\n         * </template>\n         * ```\n         */ Control: WithBoundArgs<typeof Checkbox, 'checked' | 'id' | 'onChange'>;\n                /**\n         * The Switch element requires a label, and this label already has\n         * the association to the Control by setting the `for` attribute to the `id` of the Control\n         *\n         * ```gjs\n         * import { Switch } from 'ember-primitives';\n         *\n         * <template>\n         *   <Switch as |s|>\n         *     <s.Label />\n         *   </Switch>\n         * </template>\n         * ```\n         */ Label: WithBoundArgs<typeof Label, 'for'>;\n            }];\n    };\n}\ninterface ControlSignature {\n    Element: HTMLInputElement;\n    Args: {\n        id: string;\n        checked?: boolean;\n        onChange: () => void;\n    };\n}\nconst Checkbox: TOC<ControlSignature> = template(`\n  {{#let (cell @checked) as |checked|}}\n    <input\n      id={{@id}}\n      type=\"checkbox\"\n      role=\"switch\"\n      checked={{checked.current}}\n      aria-checked={{checked.current}}\n      data-state={{if checked.current \"on\" \"off\"}}\n      {{on \"click\" (fn toggleWithFallback checked.toggle @onChange)}}\n      ...attributes\n    />\n  {{/let}}\n`, {\n    eval () {\n        return eval(arguments[0]);\n    }\n});\n/**\n * @public\n */ export const Switch: TOC<Signature> = template(`\n  <div ...attributes data-prim-switch>\n    {{! @glint-nocheck }}\n    {{#let (uniqueId) as |id|}}\n      {{yield\n        (hash\n          Control=(component Checkbox checked=@checked id=id onChange=@onChange)\n          Label=(component Label for=id)\n        )\n      }}\n    {{/let}}\n  </div>\n`, {\n    eval () {\n        return eval(arguments[0]);\n    }\n});\nexport default Switch;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2VtYmVyLXByaW1pdGl2ZXMvZW1iZXItcHJpbWl0aXZlcy9lbWJlci1wcmltaXRpdmVzL3NyYy9jb21wb25lbnRzL3N3aXRjaC5ndHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZm4sIGhhc2ggfSBmcm9tICdAZW1iZXIvaGVscGVyJztcbmltcG9ydCB7IG9uIH0gZnJvbSAnQGVtYmVyL21vZGlmaWVyJztcblxuaW1wb3J0IHsgY2VsbCB9IGZyb20gJ2VtYmVyLXJlc291cmNlcyc7XG5cbmltcG9ydCB7IHVuaXF1ZUlkIH0gZnJvbSAnLi4vdXRpbHMudHMnO1xuaW1wb3J0IHsgTGFiZWwgfSBmcm9tICcuLy1wcml2YXRlL3R5cGVkLWVsZW1lbnRzLmd0cyc7XG5pbXBvcnQgeyB0b2dnbGVXaXRoRmFsbGJhY2sgfSBmcm9tICcuLy1wcml2YXRlL3V0aWxzLnRzJztcblxuaW1wb3J0IHR5cGUgeyBUT0MgfSBmcm9tICdAZW1iZXIvY29tcG9uZW50L3RlbXBsYXRlLW9ubHknO1xuaW1wb3J0IHR5cGUgeyBXaXRoQm91bmRBcmdzIH0gZnJvbSAnQGdsaW50L3RlbXBsYXRlJztcblxuZXhwb3J0IGludGVyZmFjZSBTaWduYXR1cmUge1xuICBFbGVtZW50OiBIVE1MSW5wdXRFbGVtZW50O1xuICBBcmdzOiB7XG4gICAgLyoqXG4gICAgICogVGhlIGluaXRpYWwgY2hlY2tlZCB2YWx1ZSBvZiB0aGUgU3dpdGNoLlxuICAgICAqIFRoaXMgdmFsdWUgaXMgcmVhY3RpdmUsIHNvIGlmIHRoZSB2YWx1ZSB0aGF0XG4gICAgICogYEBjaGVja2VkYCBpcyBzZXQgdG8gdXBkYXRlcywgdGhlIHN0YXRlIG9mIHRoZSBTd2l0Y2ggd2lsbCBhbHNvIHVwZGF0ZS5cbiAgICAgKi9cbiAgICBjaGVja2VkPzogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBDYWxsYmFjayB3aGVuIHRoZSBTd2l0Y2ggc3RhdGUgaXMgdG9nZ2xlZFxuICAgICAqL1xuICAgIG9uQ2hhbmdlPzogKGNoZWNrZWQ6IGJvb2xlYW4sIGV2ZW50OiBFdmVudCkgPT4gdm9pZDtcbiAgfTtcbiAgQmxvY2tzOiB7XG4gICAgZGVmYXVsdD86IFtcbiAgICAgIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBTd2l0Y2ggRWxlbWVudC5cbiAgICAgICAgICogSXQgaGFzIGEgcHJlLXdpcmVkIGBpZGAgc28gdGhhdCB0aGUgcmVsZXZhbnQgTGFiZWwgaXNcbiAgICAgICAgICogYXBwcm9wcmlhdGVseSBhc3NvY2lhdGVkIHZpYSB0aGUgYGZvcmAgcHJvcGVydHkgb2YgdGhlIExhYmVsLlxuICAgICAgICAgKlxuICAgICAgICAgKiBgYGBnanNcbiAgICAgICAgICogaW1wb3J0IHsgU3dpdGNoIH0gZnJvbSAnZW1iZXItcHJpbWl0aXZlcyc7XG4gICAgICAgICAqXG4gICAgICAgICAqIDx0ZW1wbGF0ZT5cbiAgICAgICAgICogICA8U3dpdGNoIGFzIHxzfD5cbiAgICAgICAgICogICAgIDxzLkNvbnRyb2wgLz5cbiAgICAgICAgICogICA8L1N3aXRjaD5cbiAgICAgICAgICogPC90ZW1wbGF0ZT5cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBDb250cm9sOiBXaXRoQm91bmRBcmdzPHR5cGVvZiBDaGVja2JveCwgJ2NoZWNrZWQnIHwgJ2lkJyB8ICdvbkNoYW5nZSc-O1xuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIFN3aXRjaCBlbGVtZW50IHJlcXVpcmVzIGEgbGFiZWwsIGFuZCB0aGlzIGxhYmVsIGFscmVhZHkgaGFzXG4gICAgICAgICAqIHRoZSBhc3NvY2lhdGlvbiB0byB0aGUgQ29udHJvbCBieSBzZXR0aW5nIHRoZSBgZm9yYCBhdHRyaWJ1dGUgdG8gdGhlIGBpZGAgb2YgdGhlIENvbnRyb2xcbiAgICAgICAgICpcbiAgICAgICAgICogYGBgZ2pzXG4gICAgICAgICAqIGltcG9ydCB7IFN3aXRjaCB9IGZyb20gJ2VtYmVyLXByaW1pdGl2ZXMnO1xuICAgICAgICAgKlxuICAgICAgICAgKiA8dGVtcGxhdGU-XG4gICAgICAgICAqICAgPFN3aXRjaCBhcyB8c3w-XG4gICAgICAgICAqICAgICA8cy5MYWJlbCAvPlxuICAgICAgICAgKiAgIDwvU3dpdGNoPlxuICAgICAgICAgKiA8L3RlbXBsYXRlPlxuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIExhYmVsOiBXaXRoQm91bmRBcmdzPHR5cGVvZiBMYWJlbCwgJ2Zvcic-O1xuICAgICAgfSxcbiAgICBdO1xuICB9O1xufVxuXG5pbnRlcmZhY2UgQ29udHJvbFNpZ25hdHVyZSB7XG4gIEVsZW1lbnQ6IEhUTUxJbnB1dEVsZW1lbnQ7XG4gIEFyZ3M6IHsgaWQ6IHN0cmluZzsgY2hlY2tlZD86IGJvb2xlYW47IG9uQ2hhbmdlOiAoKSA9PiB2b2lkIH07XG59XG5cbmNvbnN0IENoZWNrYm94OiBUT0M8Q29udHJvbFNpZ25hdHVyZT4gPSA8dGVtcGxhdGU-XG4gIHt7I2xldCAoY2VsbCBAY2hlY2tlZCkgYXMgfGNoZWNrZWR8fX1cbiAgICA8aW5wdXRcbiAgICAgIGlkPXt7QGlkfX1cbiAgICAgIHR5cGU9XCJjaGVja2JveFwiXG4gICAgICByb2xlPVwic3dpdGNoXCJcbiAgICAgIGNoZWNrZWQ9e3tjaGVja2VkLmN1cnJlbnR9fVxuICAgICAgYXJpYS1jaGVja2VkPXt7Y2hlY2tlZC5jdXJyZW50fX1cbiAgICAgIGRhdGEtc3RhdGU9e3tpZiBjaGVja2VkLmN1cnJlbnQgXCJvblwiIFwib2ZmXCJ9fVxuICAgICAge3tvbiBcImNsaWNrXCIgKGZuIHRvZ2dsZVdpdGhGYWxsYmFjayBjaGVja2VkLnRvZ2dsZSBAb25DaGFuZ2UpfX1cbiAgICAgIC4uLmF0dHJpYnV0ZXNcbiAgICAvPlxuICB7ey9sZXR9fVxuPC90ZW1wbGF0ZT47XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgY29uc3QgU3dpdGNoOiBUT0M8U2lnbmF0dXJlPiA9IDx0ZW1wbGF0ZT5cbiAgPGRpdiAuLi5hdHRyaWJ1dGVzIGRhdGEtcHJpbS1zd2l0Y2g-XG4gICAge3shIEBnbGludC1ub2NoZWNrIH19XG4gICAge3sjbGV0ICh1bmlxdWVJZCkgYXMgfGlkfH19XG4gICAgICB7e3lpZWxkXG4gICAgICAgIChoYXNoXG4gICAgICAgICAgQ29udHJvbD0oY29tcG9uZW50IENoZWNrYm94IGNoZWNrZWQ9QGNoZWNrZWQgaWQ9aWQgb25DaGFuZ2U9QG9uQ2hhbmdlKVxuICAgICAgICAgIExhYmVsPShjb21wb25lbnQgTGFiZWwgZm9yPWlkKVxuICAgICAgICApXG4gICAgICB9fVxuICAgIHt7L2xldH19XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT47XG5cbmV4cG9ydCBkZWZhdWx0IFN3aXRjaDtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsU0FBUyxFQUFFLEVBQUUsSUFBSSxRQUFRLGdCQUFnQjtBQUN6QyxTQUFTLEVBQUUsUUFBUSxrQkFBa0I7QUFFckMsU0FBUyxJQUFJLFFBQVEsa0JBQWtCO0FBRXZDLFNBQVMsUUFBUSxRQUFRLGNBQWM7QUFDdkMsU0FBUyxLQUFLLFFBQVEsZ0NBQWdDO0FBQ3RELFNBQVMsa0JBQWtCLFFBQVEsc0JBQXNCO0FBRXpELGNBQWMsR0FBRyxRQUFRLGlDQUFpQztBQUMxRCxjQUFjLGFBQWEsUUFBUSxrQkFBa0I7QUFFckQsaUJBQWlCO0lBQ2YsU0FBUztJQUNUO1FBQ0U7Ozs7S0FJQyxHQUNELFVBQVUsT0FBTztRQUNqQjs7S0FFQyxHQUNELFlBQVksU0FBUyxPQUFPLEVBQUUsT0FBTyxVQUFVLElBQUk7O0lBRXJEO1FBQ0U7Z0JBRUk7Ozs7Ozs7Ozs7Ozs7O1NBY0MsR0FDRCxTQUFTLHFCQUFxQixVQUFVLFlBQVksT0FBTztnQkFDM0Q7Ozs7Ozs7Ozs7Ozs7U0FhQyxHQUNELE9BQU8scUJBQXFCLE9BQU87Ozs7VUFNakM7SUFDUixTQUFTO0lBQ1Q7UUFBUSxJQUFJLE1BQU07UUFBRSxVQUFVLE9BQU87UUFBRSxnQkFBZ0IsSUFBSTs7O0FBRzdELE1BQU0sVUFBVSxJQUFJLG9CQUFvQixTQUFVLENBQUE7Ozs7Ozs7Ozs7Ozs7QUFhbEQsQ0FBQSxFQUFBO0lBQUE7UUFBQSxPQUFBLEtBQUEsU0FBQSxDQUFBLEVBQVc7SUFBRDtBQUFBO0FBRVY7O0NBRUMsR0FDRCxPQUFPLE1BQU0sUUFBUSxJQUFJLGFBQWEsU0FBVSxDQUFBOzs7Ozs7Ozs7Ozs7QUFZaEQsQ0FBQSxFQUFBO0lBQUE7UUFBQSxPQUFBLEtBQUEsU0FBQSxDQUFBLEVBQVc7SUFBRDtBQUFBLEdBQUU7QUFFWixlQUFlLE9BQU8ifQ"],"names":["Checkbox","setComponentTemplate","precompileTemplate","scope","cell","on","fn","toggleWithFallback","strictMode","templateOnly","Switch","uniqueId","hash","Label"],"mappings":";;;;;;;;;;AAsEA,MAAMA,QAAc,GAAAC,oBAAA,CAAoBC,kBAAA,CAaxC,mTAAA,EAAA;AAAAC,EAAAA,KAAA,EAAAA,OAAA;IAAAC,IAAA;IAAAC,EAAA;IAAAC,EAAA;AAAAC,IAAAA,kBAAAA;AAAA,GAAA,CAAA;EAAAC,UAAA,EAAA,IAAA;AAAU,CAAA,CAAA,EAAAC,YAAA,EAAA,CAAA,CAAA;AAEV;;;MAGaC,MAAY,GAAAT,oBAAA,CAAaC,kBAAA,CAYtC,kQAAA,EAAA;AAAAC,EAAAA,KAAA,EAAAA,OAAA;IAAAQ,QAAA;IAAAC,IAAA;IAAAZ,QAAA;AAAAa,IAAAA,KAAAA;AAAA,GAAA,CAAA;EAAAL,UAAA,EAAA,IAAA;AAAU,CAAA,CAAA,EAAAC,YAAA,EAAA;;;;"}