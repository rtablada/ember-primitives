{"version":3,"file":"toggle.js","sources":["../../src/components/toggle.gts"],"sourcesContent":["// import Component from '@glimmer/component';\nimport { template } from \"@ember/template-compiler\";\nimport { fn } from '@ember/helper';\nimport { on } from '@ember/modifier';\nimport { cell } from 'ember-resources';\nimport { toggleWithFallback } from './-private/utils.ts';\nimport type { TOC } from '@ember/component/template-only';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport interface Signature<Value = any> {\n    Element: HTMLButtonElement;\n    Args: {\n        /**\n     * The pressed-state of the toggle.\n     *\n     * Can be used to control the state of the component.\n     */ pressed?: boolean;\n        /**\n     * Callback for when the toggle's state is changed.\n     *\n     * Can be used to control the state of the component.\n     *\n     * if a `@value` is passed to this `<Toggle>`, that @value will\n     * be passed to the `@onChange` handler.\n     *\n     * This can be useful when using the same function for the `@onChange`\n     * handler with multiple `<Toggle>` components.\n     */ onChange?: (value: Value | undefined, pressed: boolean) => void;\n        /**\n     * When used in a group of Toggles, this option will be helpful to\n     * know which toggle was pressed if you're using the same @onChange\n     * handler for multiple toggles.\n     */ value?: Value;\n        /**\n     * When controlling state in a wrapping component, this function can be used in conjunction with `@value` to determine if this `<Toggle>` should appear pressed.\n     */ isPressed?: (value?: Value | undefined) => boolean;\n    };\n    Blocks: {\n        default: [/**\n       * the current pressed state of the toggle button\n       *\n       * Useful when using the toggle button as an uncontrolled component\n       */ pressed: boolean];\n    };\n}\nfunction isPressed(pressed1?: boolean, value1?: unknown, isPressed1?: (value?: unknown) => boolean): boolean {\n    if (!value1) return Boolean(pressed1);\n    if (!isPressed1) return Boolean(pressed1);\n    return isPressed1(value1);\n}\nexport const Toggle: TOC<Signature> = template(`\n  {{#let (cell (isPressed @pressed @value @isPressed)) as |pressed|}}\n    <button\n      type=\"button\"\n      aria-pressed=\"{{pressed.current}}\"\n      {{on \"click\" (fn toggleWithFallback pressed.toggle @onChange @value)}}\n      ...attributes\n    >\n      {{yield pressed.current}}\n    </button>\n  {{/let}}\n`, {\n    eval () {\n        return eval(arguments[0]);\n    }\n});\nexport default Toggle;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2VtYmVyLXByaW1pdGl2ZXMvZW1iZXItcHJpbWl0aXZlcy9lbWJlci1wcmltaXRpdmVzL3NyYy9jb21wb25lbnRzL3RvZ2dsZS5ndHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IENvbXBvbmVudCBmcm9tICdAZ2xpbW1lci9jb21wb25lbnQnO1xuaW1wb3J0IHsgZm4gfSBmcm9tICdAZW1iZXIvaGVscGVyJztcbmltcG9ydCB7IG9uIH0gZnJvbSAnQGVtYmVyL21vZGlmaWVyJztcblxuaW1wb3J0IHsgY2VsbCB9IGZyb20gJ2VtYmVyLXJlc291cmNlcyc7XG5cbmltcG9ydCB7IHRvZ2dsZVdpdGhGYWxsYmFjayB9IGZyb20gJy4vLXByaXZhdGUvdXRpbHMudHMnO1xuXG5pbXBvcnQgdHlwZSB7IFRPQyB9IGZyb20gJ0BlbWJlci9jb21wb25lbnQvdGVtcGxhdGUtb25seSc7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5leHBvcnQgaW50ZXJmYWNlIFNpZ25hdHVyZTxWYWx1ZSA9IGFueT4ge1xuICBFbGVtZW50OiBIVE1MQnV0dG9uRWxlbWVudDtcbiAgQXJnczoge1xuICAgIC8qKlxuICAgICAqIFRoZSBwcmVzc2VkLXN0YXRlIG9mIHRoZSB0b2dnbGUuXG4gICAgICpcbiAgICAgKiBDYW4gYmUgdXNlZCB0byBjb250cm9sIHRoZSBzdGF0ZSBvZiB0aGUgY29tcG9uZW50LlxuICAgICAqL1xuICAgIHByZXNzZWQ_OiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIENhbGxiYWNrIGZvciB3aGVuIHRoZSB0b2dnbGUncyBzdGF0ZSBpcyBjaGFuZ2VkLlxuICAgICAqXG4gICAgICogQ2FuIGJlIHVzZWQgdG8gY29udHJvbCB0aGUgc3RhdGUgb2YgdGhlIGNvbXBvbmVudC5cbiAgICAgKlxuICAgICAqIGlmIGEgYEB2YWx1ZWAgaXMgcGFzc2VkIHRvIHRoaXMgYDxUb2dnbGU-YCwgdGhhdCBAdmFsdWUgd2lsbFxuICAgICAqIGJlIHBhc3NlZCB0byB0aGUgYEBvbkNoYW5nZWAgaGFuZGxlci5cbiAgICAgKlxuICAgICAqIFRoaXMgY2FuIGJlIHVzZWZ1bCB3aGVuIHVzaW5nIHRoZSBzYW1lIGZ1bmN0aW9uIGZvciB0aGUgYEBvbkNoYW5nZWBcbiAgICAgKiBoYW5kbGVyIHdpdGggbXVsdGlwbGUgYDxUb2dnbGU-YCBjb21wb25lbnRzLlxuICAgICAqL1xuICAgIG9uQ2hhbmdlPzogKHZhbHVlOiBWYWx1ZSB8IHVuZGVmaW5lZCwgcHJlc3NlZDogYm9vbGVhbikgPT4gdm9pZDtcblxuICAgIC8qKlxuICAgICAqIFdoZW4gdXNlZCBpbiBhIGdyb3VwIG9mIFRvZ2dsZXMsIHRoaXMgb3B0aW9uIHdpbGwgYmUgaGVscGZ1bCB0b1xuICAgICAqIGtub3cgd2hpY2ggdG9nZ2xlIHdhcyBwcmVzc2VkIGlmIHlvdSdyZSB1c2luZyB0aGUgc2FtZSBAb25DaGFuZ2VcbiAgICAgKiBoYW5kbGVyIGZvciBtdWx0aXBsZSB0b2dnbGVzLlxuICAgICAqL1xuICAgIHZhbHVlPzogVmFsdWU7XG5cbiAgICAvKipcbiAgICAgKiBXaGVuIGNvbnRyb2xsaW5nIHN0YXRlIGluIGEgd3JhcHBpbmcgY29tcG9uZW50LCB0aGlzIGZ1bmN0aW9uIGNhbiBiZSB1c2VkIGluIGNvbmp1bmN0aW9uIHdpdGggYEB2YWx1ZWAgdG8gZGV0ZXJtaW5lIGlmIHRoaXMgYDxUb2dnbGU-YCBzaG91bGQgYXBwZWFyIHByZXNzZWQuXG4gICAgICovXG4gICAgaXNQcmVzc2VkPzogKHZhbHVlPzogVmFsdWUgfCB1bmRlZmluZWQpID0-IGJvb2xlYW47XG4gIH07XG4gIEJsb2Nrczoge1xuICAgIGRlZmF1bHQ6IFtcbiAgICAgIC8qKlxuICAgICAgICogdGhlIGN1cnJlbnQgcHJlc3NlZCBzdGF0ZSBvZiB0aGUgdG9nZ2xlIGJ1dHRvblxuICAgICAgICpcbiAgICAgICAqIFVzZWZ1bCB3aGVuIHVzaW5nIHRoZSB0b2dnbGUgYnV0dG9uIGFzIGFuIHVuY29udHJvbGxlZCBjb21wb25lbnRcbiAgICAgICAqL1xuICAgICAgcHJlc3NlZDogYm9vbGVhbixcbiAgICBdO1xuICB9O1xufVxuXG5mdW5jdGlvbiBpc1ByZXNzZWQoXG4gIHByZXNzZWQ_OiBib29sZWFuLFxuICB2YWx1ZT86IHVua25vd24sXG4gIGlzUHJlc3NlZD86ICh2YWx1ZT86IHVua25vd24pID0-IGJvb2xlYW5cbik6IGJvb2xlYW4ge1xuICBpZiAoIXZhbHVlKSByZXR1cm4gQm9vbGVhbihwcmVzc2VkKTtcbiAgaWYgKCFpc1ByZXNzZWQpIHJldHVybiBCb29sZWFuKHByZXNzZWQpO1xuXG4gIHJldHVybiBpc1ByZXNzZWQodmFsdWUpO1xufVxuXG5leHBvcnQgY29uc3QgVG9nZ2xlOiBUT0M8U2lnbmF0dXJlPiA9IDx0ZW1wbGF0ZT5cbiAge3sjbGV0IChjZWxsIChpc1ByZXNzZWQgQHByZXNzZWQgQHZhbHVlIEBpc1ByZXNzZWQpKSBhcyB8cHJlc3NlZHx9fVxuICAgIDxidXR0b25cbiAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgYXJpYS1wcmVzc2VkPVwie3twcmVzc2VkLmN1cnJlbnR9fVwiXG4gICAgICB7e29uIFwiY2xpY2tcIiAoZm4gdG9nZ2xlV2l0aEZhbGxiYWNrIHByZXNzZWQudG9nZ2xlIEBvbkNoYW5nZSBAdmFsdWUpfX1cbiAgICAgIC4uLmF0dHJpYnV0ZXNcbiAgICA-XG4gICAgICB7e3lpZWxkIHByZXNzZWQuY3VycmVudH19XG4gICAgPC9idXR0b24-XG4gIHt7L2xldH19XG48L3RlbXBsYXRlPjtcblxuZXhwb3J0IGRlZmF1bHQgVG9nZ2xlO1xuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDhDQUE4Qzs7QUFDOUMsU0FBUyxFQUFFLFFBQVEsZ0JBQWdCO0FBQ25DLFNBQVMsRUFBRSxRQUFRLGtCQUFrQjtBQUVyQyxTQUFTLElBQUksUUFBUSxrQkFBa0I7QUFFdkMsU0FBUyxrQkFBa0IsUUFBUSxzQkFBc0I7QUFFekQsY0FBYyxHQUFHLFFBQVEsaUNBQWlDO0FBRTFELDhEQUE4RDtBQUM5RCxpQkFBaUIsVUFBVSxRQUFRLEdBQUc7SUFDcEMsU0FBUztJQUNUO1FBQ0U7Ozs7S0FJQyxHQUNELFVBQVUsT0FBTztRQUNqQjs7Ozs7Ozs7OztLQVVDLEdBQ0QsWUFBWSxPQUFPLFFBQVEsU0FBUyxFQUFFLFNBQVMsT0FBTyxLQUFLLElBQUk7UUFFL0Q7Ozs7S0FJQyxHQUNELFFBQVE7UUFFUjs7S0FFQyxHQUNELGFBQWEsUUFBUSxRQUFRLFNBQVMsS0FBSyxPQUFPOztJQUVwRDtRQUNFLFVBQ0U7Ozs7T0FJQyxHQUNELFNBQVMsT0FBTzs7O0FBS3RCLFNBQVMsVUFDUCxXQUFVLE9BQU8sRUFDakIsU0FBUSxPQUFPLEVBQ2YsY0FBYSxRQUFRLE9BQU8sS0FBSyxPQUFPLEdBQ3ZDLE9BQU87SUFDUixJQUFJLENBQUMsUUFBTyxPQUFPLFFBQVE7SUFDM0IsSUFBSSxDQUFDLFlBQVcsT0FBTyxRQUFRO0lBRS9CLE9BQU8sV0FBVTtBQUNuQjtBQUVBLE9BQU8sTUFBTSxRQUFRLElBQUksYUFBYSxTQUFVLENBQUE7Ozs7Ozs7Ozs7O0FBV2hELENBQUEsRUFBQTtJQUFBO1FBQUEsT0FBQSxLQUFBLFNBQUEsQ0FBQSxFQUFXO0lBQUQ7QUFBQSxHQUFFO0FBRVosZUFBZSxPQUFPIn0"],"names":["isPressed","pressed1","value1","isPressed1","Boolean","Toggle","setComponentTemplate","precompileTemplate","scope","cell","on","fn","toggleWithFallback","strictMode","templateOnly"],"mappings":";;;;;;;;AAAA;;AAyDA,SAASA,UACPC,QAAiB,EACjBC,MAAe,EACfC,UAAwC,EAChC;AACR,EAAA,IAAI,CAACD,MAAA,EAAO,OAAOE,OAAA,CAAQH,QAAA,CAAA,CAAA;AAC3B,EAAA,IAAI,CAACE,UAAA,EAAW,OAAOC,OAAA,CAAQH,QAAA,CAAA,CAAA;EAE/B,OAAOE,UAAA,CAAUD,MAAA,CAAA,CAAA;AACnB,CAAA;MAEaG,MAAY,GAAAC,oBAAA,CAAaC,kBAAA,CAWtC,iSAAA,EAAA;AAAAC,EAAAA,KAAA,EAAAA,OAAA;IAAAC,IAAA;IAAAT,SAAA;IAAAU,EAAA;IAAAC,EAAA;AAAAC,IAAAA,kBAAAA;AAAA,GAAA,CAAA;EAAAC,UAAA,EAAA,IAAA;AAAU,CAAA,CAAA,EAAAC,YAAA,EAAA;;;;"}