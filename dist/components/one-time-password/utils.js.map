{"version":3,"file":"utils.js","sources":["../../../src/components/one-time-password/utils.ts"],"sourcesContent":["import { assert } from '@ember/debug';\n\nfunction getInputs(current: HTMLInputElement) {\n  let fieldset = current.closest('fieldset');\n\n  assert('[BUG]: fieldset went missing', fieldset);\n\n  return [...fieldset.querySelectorAll('input')];\n}\n\nfunction nextInput(current: HTMLInputElement) {\n  let inputs = getInputs(current);\n  let currentIndex = inputs.indexOf(current);\n\n  return inputs[currentIndex + 1];\n}\n\nexport function selectAll(event: Event) {\n  let target = event.target;\n\n  assert(`selectAll is only meant for use with input elements`, target instanceof HTMLInputElement);\n\n  target.select();\n}\n\nexport function handlePaste(event: Event) {\n  let target = event.target;\n\n  assert(\n    `handlePaste is only meant for use with input elements`,\n    target instanceof HTMLInputElement\n  );\n\n  let clipboardData = (event as ClipboardEvent).clipboardData;\n\n  assert(\n    `Could not get clipboardData while handling the paste event on OTP. Please report this issue on the ember-primitives repo with a reproduction. Thanks!`,\n    clipboardData\n  );\n\n  // This is typically not good to prevent paste.\n  // But because of the UX we're implementing,\n  // we want to split the pasted value across\n  // multiple text fields\n  event.preventDefault();\n\n  let value = clipboardData.getData('Text');\n  const digits = value;\n  let i = 0;\n  let currElement: HTMLInputElement | null = target;\n\n  while (currElement) {\n    currElement.value = digits[i++] || '';\n\n    let next = nextInput(currElement);\n\n    if (next instanceof HTMLInputElement) {\n      currElement = next;\n    } else {\n      break;\n    }\n  }\n\n  // We want to select the first field again\n  // so that if someone holds paste, or\n  // pastes again, they get the same result.\n  target.select();\n}\n\nexport function handleNavigation(event: KeyboardEvent) {\n  switch (event.key) {\n    case 'Backspace':\n      return handleBackspace(event);\n    case 'ArrowLeft':\n      return focusLeft(event);\n    case 'ArrowRight':\n      return focusRight(event);\n  }\n}\n\nfunction focusLeft(event: Pick<Event, 'target'>) {\n  let target = event.target;\n\n  assert(`only allowed on input elements`, target instanceof HTMLInputElement);\n\n  let input = previousInput(target);\n\n  input?.focus();\n  requestAnimationFrame(() => {\n    input?.select();\n  });\n}\n\nfunction focusRight(event: Pick<Event, 'target'>) {\n  let target = event.target;\n\n  assert(`only allowed on input elements`, target instanceof HTMLInputElement);\n\n  let input = nextInput(target);\n\n  input?.focus();\n  requestAnimationFrame(() => {\n    input?.select();\n  });\n}\n\nconst syntheticEvent = new InputEvent('input');\n\nfunction handleBackspace(event: KeyboardEvent) {\n  if (event.key !== 'Backspace') return;\n\n  /**\n   * We have to prevent default because we\n   * - want to clear the whole field\n   * - have the focus behavior keep up with the key-repeat\n   *   speed of the user's computer\n   */\n  event.preventDefault();\n\n  let target = event.target;\n\n  if (target && 'value' in target) {\n    if (target.value === '') {\n      focusLeft({ target });\n    } else {\n      target.value = '';\n    }\n  }\n\n  target?.dispatchEvent(syntheticEvent);\n}\n\nfunction previousInput(current: HTMLInputElement) {\n  let inputs = getInputs(current);\n  let currentIndex = inputs.indexOf(current);\n\n  return inputs[currentIndex - 1];\n}\n\nexport const autoAdvance = (event: Event) => {\n  assert(\n    '[BUG]: autoAdvance called on non-input element',\n    event.target instanceof HTMLInputElement\n  );\n\n  let value = event.target.value;\n\n  if (value.length === 0) return;\n\n  if (value.length > 0) {\n    if ('data' in event && event.data && typeof event.data === 'string') {\n      event.target.value = event.data;\n    }\n\n    return focusRight(event);\n  }\n};\n\nexport function getCollectiveValue(elementTarget: EventTarget | null, length: number) {\n  if (!elementTarget) return;\n\n  assert(\n    `[BUG]: somehow the element target is not HTMLElement`,\n    elementTarget instanceof HTMLElement\n  );\n\n  let parent: null | HTMLElement | ShadowRoot;\n\n  // TODO: should this logic be extracted?\n  //       why is getting the target element within a shadow root hard?\n  if (!(elementTarget instanceof HTMLInputElement)) {\n    if (elementTarget.shadowRoot) {\n      parent = elementTarget.shadowRoot;\n    } else {\n      parent = elementTarget.closest('fieldset');\n    }\n  } else {\n    parent = elementTarget.closest('fieldset');\n  }\n\n  assert(`[BUG]: somehow the input fields were rendered without a parent element`, parent);\n\n  let elements = parent.querySelectorAll('input');\n\n  let value = '';\n\n  assert(\n    `found elements (${elements.length}) do not match length (${length}). Was the same OTP input rendered more than once?`,\n    elements.length === length\n  );\n\n  for (let element of elements) {\n    assert(\n      '[BUG]: how did the queried elements become a non-input element?',\n      element instanceof HTMLInputElement\n    );\n    value += element.value;\n  }\n\n  return value;\n}\n"],"names":["getInputs","current","fieldset","closest","assert","querySelectorAll","nextInput","inputs","currentIndex","indexOf","selectAll","event","target","HTMLInputElement","select","handlePaste","clipboardData","preventDefault","value","getData","digits","i","currElement","next","handleNavigation","key","handleBackspace","focusLeft","focusRight","input","previousInput","focus","requestAnimationFrame","syntheticEvent","InputEvent","dispatchEvent","autoAdvance","length","data","getCollectiveValue","elementTarget","HTMLElement","parent","shadowRoot","elements","element"],"mappings":"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"}