{"version":3,"file":"otp.js","sources":["../../src/test-support/otp.ts"],"sourcesContent":["import { assert } from '@ember/debug';\nimport { fillIn, find, settled } from '@ember/test-helpers';\n\n/**\n * @param {string} code the code to fill the input(s) with.\n * @param {string} [ selector ] if there are multiple OTP components on a page, this can be used to select one of them.\n */\nexport async function fillOTP(code: string, selector?: string) {\n  let ancestor = selector ? find(selector) : document;\n\n  assert(\n    `Could not find ancestor element, does your selector match an existing element?`,\n    ancestor\n  );\n\n  let fieldset =\n    ancestor instanceof HTMLFieldSetElement ? ancestor : ancestor.querySelector('fieldset');\n\n  assert(\n    `Could not find containing fieldset element (this holds the OTP Input fields). Was the OTP component rendered?`,\n    fieldset\n  );\n\n  let inputs = fieldset.querySelectorAll('input');\n\n  assert(\n    `code cannot be longer than the available inputs. code is of length ${code.length} but there are ${inputs.length}`,\n    code.length <= inputs.length\n  );\n\n  let chars = code.split('');\n\n  assert(`OTP Input for index 0 is missing!`, inputs[0]);\n  assert(`Character at index 0 is missing`, chars[0]);\n\n  for (let i = 0; i < chars.length; i++) {\n    let input = inputs[i];\n    let char = chars[i];\n\n    assert(`Input at index ${i} is missing`, input);\n    assert(`Character at index ${i} is missing`, char);\n\n    input.value = char;\n  }\n\n  await fillIn(inputs[0], chars[0]);\n\n  // Account for out-of-settled-system delay due to RAF debounce.\n  await new Promise((resolve) => requestAnimationFrame(resolve));\n  await settled();\n}\n"],"names":["fillOTP","code","selector","ancestor","find","document","assert","fieldset","HTMLFieldSetElement","querySelector","inputs","querySelectorAll","length","chars","split","i","input","char","value","fillIn","Promise","resolve","requestAnimationFrame","settled"],"mappings":";;;AAGA;AACA;AACA;AACA;AACO,eAAeA,OAAOA,CAACC,IAAY,EAAEC,QAAiB,EAAE;EAC7D,IAAIC,QAAQ,GAAGD,QAAQ,GAAGE,IAAI,CAACF,QAAQ,CAAC,GAAGG,QAAQ,CAAA;AAEnDC,EAAAA,MAAM,CACH,CAAA,8EAAA,CAA+E,EAChFH,QACF,CAAC,CAAA;AAED,EAAA,IAAII,QAAQ,GACVJ,QAAQ,YAAYK,mBAAmB,GAAGL,QAAQ,GAAGA,QAAQ,CAACM,aAAa,CAAC,UAAU,CAAC,CAAA;AAEzFH,EAAAA,MAAM,CACH,CAAA,6GAAA,CAA8G,EAC/GC,QACF,CAAC,CAAA;AAED,EAAA,IAAIG,MAAM,GAAGH,QAAQ,CAACI,gBAAgB,CAAC,OAAO,CAAC,CAAA;AAE/CL,EAAAA,MAAM,CACH,CAAqEL,mEAAAA,EAAAA,IAAI,CAACW,MAAO,CAAA,eAAA,EAAiBF,MAAM,CAACE,MAAO,CAAC,CAAA,EAClHX,IAAI,CAACW,MAAM,IAAIF,MAAM,CAACE,MACxB,CAAC,CAAA;AAED,EAAA,IAAIC,KAAK,GAAGZ,IAAI,CAACa,KAAK,CAAC,EAAE,CAAC,CAAA;AAE1BR,EAAAA,MAAM,CAAE,CAAkC,iCAAA,CAAA,EAAEI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;AACtDJ,EAAAA,MAAM,CAAE,CAAgC,+BAAA,CAAA,EAAEO,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;AAEnD,EAAA,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACD,MAAM,EAAEG,CAAC,EAAE,EAAE;AACrC,IAAA,IAAIC,KAAK,GAAGN,MAAM,CAACK,CAAC,CAAC,CAAA;AACrB,IAAA,IAAIE,IAAI,GAAGJ,KAAK,CAACE,CAAC,CAAC,CAAA;AAEnBT,IAAAA,MAAM,CAAE,CAAiBS,eAAAA,EAAAA,CAAE,CAAY,WAAA,CAAA,EAAEC,KAAK,CAAC,CAAA;AAC/CV,IAAAA,MAAM,CAAE,CAAqBS,mBAAAA,EAAAA,CAAE,CAAY,WAAA,CAAA,EAAEE,IAAI,CAAC,CAAA;IAElDD,KAAK,CAACE,KAAK,GAAGD,IAAI,CAAA;AACpB,GAAA;EAEA,MAAME,MAAM,CAACT,MAAM,CAAC,CAAC,CAAC,EAAEG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;;AAEjC;EACA,MAAM,IAAIO,OAAO,CAAEC,OAAO,IAAKC,qBAAqB,CAACD,OAAO,CAAC,CAAC,CAAA;EAC9D,MAAME,OAAO,EAAE,CAAA;AACjB;;;;"}